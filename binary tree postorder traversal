class Solution:
    def postorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        if not root:
            return []
        stack = []
        result = []
        prev = None
        while root or stack:
            while root:
                stack.append(root)
                root = root.left
            root = stack[-1]
            if not root.right or root.right == prev:
                result.append(root.val)
                stack.pop()
                prev = root
                root = None
            else:
                root = root.right 
        return result
